Уточняю по поводу курсовой работы. Есть два варианта выполнения курсовой:
1) Усложненное программирования без элементов схемотехники
Есть 2 программируемых элемента: esp32 и stm32. STM должна собирать данные с датчиков (от 2 до 3 сенсоров), а также иметь 1 исполнительное устройство.
Для работы с датчиками с STM можно взять DHT-11 https://habr.com/ru/post/160017/ или DHT-22 https://controllerstech.com/temperature-measurement-using-dht22-in-stm32/
MPU6050 https://habr.com/ru/post/587116/ или использовать простой фоторезистор https://cxemka.com/60-podklyuchenie-fotorezistora-k-stm32-izmerenie-osveschennosti.html
Для исполнительного устройсва можно взять реле или электромоторчик с управлением с помощью транзистора (https://ru.stackoverflow.com/questions/766472/%D0%9A%D0%B0%D0%BA-%D0%BF%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D1%8C%D0%BD%D0%BE-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D1%8C-%D1%82%D1%80%D0%B0%D0%BD%D0%B7%D0%B8%D1%81%D1%82%D0%BE%D1%80%D1%8B) или упростить все до включения светодиода.

Для команды к сбору данных можно использовать три режима (опрос с определенным временным периодом, постоянный опрос, опрос по команде)
Каждый режим изменит специфику устройства, первый - периодический сенсор, который следит за каким-то объектом долгое время, нужен для сбора статистики, второй - дифференциальный сенсор, который срабатывает только, если что-то изменило внешнюю конфигурацию, третий исполнительное устройство, которая выполняет лишь роль внешней периферии.
Для связи stm32 и esp32 необходимо использовать UART https://habr.com/ru/post/584866/ https://we.easyelectronics.ru/STM32/uart-usart-na-stm32l-stm32.html
Для первого режима, stm32 отсылает по UART данные с датчиков с определенным временным промежутком
Для второго режима stm32 отсылает данные по UART только в случае их изменения данных с датчиков от прошлого значения (или изменения от прошлого значения на величину в 5%, чтобы помехи не создавали лишний запрос на отправку)

Для третьего режима требуется дожидаться команды по UART, по которой начнется сбор данных и отправка их по UART esp32.
Также для всех трех режимов необходимо сделать возможность взаимодействия с исполнительным устройством, чтобы при определенной команде esp32 включалось иои выключалось исполнительное устройство.
Для конфигурации esp32 требуется ее взаимодействие по сети интернет с пк через протокол mqtt. В зависимости выбранного режима работы stm32, требуется настроить работу esp32. Если выбран первый режим, то при получении данных по UART, esp разделяет данные по определенным топикам и отсылает их на брокер. Если выбран второй вариант, то он аналогичен первому. Если выбран третий вариант, то требуется esp32 инициализировать запрос на сбор данных через определенные промежутки времени, и все остальное также аналогично первому варианту. Также esp32 подписана на топик по работе с исполнительным устройствам и при команде с внешнего клиента (если в этом топике публикуется команда включения (ON), то esp32 отсылает запрос на включение stm32, и если публикуется команда OFF, то запрос на выключение). Для выполнения курсовой достаточно работы stm32 с одним датчиком и взаимодействии c esp32 и mqtt в одном из представленных режимов, но для получения лучших результатов требуется использовать больше вводных параметров, не запрещается внедрять собственные идеи. Также можно вместо mqtt использовать htpp страницу для отображения всех данных, а также кнопки для управления нагрузкой, как при первом варианте с курсовой. Второй вариант выполнения опишу завтра, где требуется использовать основы схемотехники, которые мы проходили на этом курсе.
Второй вариант задания. Задание упрощается до одного контроллера, ESP32. Все остальные элементы аналогичны как в первом варианте, только esp32 собирает данные с датчиков, а также управляет исполнительным устройством, при сборе данных с определенным временным промежутком, esp32 отправляет данные на mqtt брокер. Так как задание упрощено, дополнительной частью задания является создание электрической схемы, где будут реализовано:
1) Первая схема на основе контроллера stm32f103c8t6. STM32 собирает данные с 3 датчиков (bme280, mpu9250, aht10), используется CAN шина, для этого используется микросхема SN65VD230, CAN-шина выведена на отдельный разъем. Входное питание 5В, требуется понизить до 3.3В, используя методы, описанные в лекциях.
2) Вторая схема на основе модуля esp32. Данное устройство собирает данные с 3 сигналов АЦП (1-внешний аналоговый датчик, токовый монитор, делитель напряжения на входе питания). Входное питание 12В, требуется поставить шунт, на котором будет падать напряжение и это значение подается на ОУ, которое усиливает падение напряжение и подает его на микроконтроллер (токовый монитор). Требуется обеспечить защиту входов АЦП от перенапряжения и помех. Требуется также понизить напряжение до 5В и до 3.3В, 3.3В используется для esp32, 5В идет на внешний разъем. Также esp32 использует программный CAN с использованием микросхемы SN65VD230, его также необходимо вывести на внешний разъем.
Схемы надо реализовать, учитывая специфику контроллеров и их внешнюю обвязку
